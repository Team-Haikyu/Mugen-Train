-- create table admin(
--     id INT NOT NULL,
--     username Varchar2(40),
--     Email varchar2(40),
--     mobile varchar2(11),
--     password varchar2(255),
--     CONSTRAINT ADMIN_PK PRIMARY KEY (ID)
-- );

-- CREATE SEQUENCE admin_seq START WITH 1;

-- CREATE OR REPLACE TRIGGER ADMIN_ID
-- BEFORE INSERT ON admin
-- FOR EACH ROW

-- BEGIN
--   SELECT admin_seq.NEXTVAL
--   INTO   :new.id
--   FROM   dual;
-- END;
-- /

create table users(
    id INT NOT NULL,
    username Varchar2(40),
    Email varchar2(40),
    mobile varchar2(11),
    dob DATE,
    password varchar2(255),
    isAdmin NUMBER(1,0) DEFAULT 0,
    CONSTRAINT user_PK PRIMARY KEY (ID)
);

CREATE SEQUENCE users_seq START WITH 1;

CREATE OR REPLACE TRIGGER user_ID
BEFORE INSERT ON users
FOR EACH ROW

BEGIN
  SELECT users_seq.NEXTVAL
  INTO   :new.id
  FROM   dual;
END;
/




CREATE TABLE TRAINS(
  TID INT,
  TNAME VARCHAR2(20),
  TOTAL_SEATS NUMBER(3,0) DEFAULT 0,
  TOTAL_BLOCKS NUMBER(2,0) DEFAULT 0,
  CONSTRAINT TRAIN_PK PRIMARY KEY (TID)
);

CREATE SEQUENCE TRAINS_seq START WITH 1000;

CREATE OR REPLACE TRIGGER TRAIN_ID
BEFORE INSERT ON TRAINS
FOR EACH ROW

BEGIN
  SELECT TRAINS_seq.NEXTVAL
  INTO   :new.TID
  FROM   dual;
END;
/

INSERT INTO TRAINS(TNAME, TOTAL_SEATS, TOTAL_BLOCKS) VALUES('Mugen', 240, 8);

CREATE TABLE BLOCKS(
  BID INT,
  TID INT,
  B_NAME VARCHAR2(20),
  TOTAL_SEATS NUMBER(3,0),
  CLASS VARCHAR2(20),
  FARE NUMBER(3,0),
  CONSTRAINT BLOCK_PK PRIMARY KEY (BID),
  CONSTRAINT BT_FK FOREIGN KEY (TID) REFERENCES TRAINS(TID)
);

CREATE SEQUENCE BLOCKS_seq START WITH 1;

CREATE OR REPLACE TRIGGER BLOCK_ID
BEFORE INSERT ON BLOCKS
FOR EACH ROW

BEGIN
  SELECT BLOCKS_seq.NEXTVAL
  INTO   :new.BID
  FROM   dual;
END;
/

INSERT INTO BLOCKS(TID, B_NAME, TOTAL_SEATS, CLASS, FARE) VALUES(1000, 'A', 30, 'AC', 100 )

CREATE TABLE SEATS(
  SID INT,                                    
  SEAT_NUM INT,
  TID INT,
  BID INT,
  CLASS VARCHAR2(20),
  -- IS_BOOKED NUMBER(1,0) DEFAULT 0,
  CONSTRAINT SPK PRIMARY KEY (SID),
  CONSTRAINT STD FOREIGN KEY(TID) REFERENCES TRAINS(TID),
  CONSTRAINT SBD FOREIGN KEY(BID) REFERENCES BLOCKS(BID)
);


CREATE SEQUENCE SEATS_seq START WITH 1;

CREATE OR REPLACE TRIGGER SEAT_ID
BEFORE INSERT ON SEATS
FOR EACH ROW

BEGIN
  SELECT SEATS_seq.NEXTVAL
  INTO   :new.SID
  FROM   dual;
END;
/

INSERT INTO SEATS(SEAT_NUM, TID, BID, CLASS) VALUES(1,1001,1,'SHOVAN');

CREATE TABLE ROUTES(
  ROUTE_ID INT,
  SOURCE VARCHAR2(20),
  DEST VARCHAR2(20),
  FARE NUMBER(3,0),
  CONSTRAINT ROUTE_PK PRIMARY KEY(ROUTE_ID)
);


CREATE SEQUENCE ROUTE_seq START WITH 1;

CREATE OR REPLACE TRIGGER ROUTE_ID
BEFORE INSERT ON ROUTES
FOR EACH ROW

BEGIN
  SELECT ROUTE_seq.NEXTVAL
  INTO   :new.ROUTE_ID
  FROM   dual;
END;
/
INSERT INTO ROUTES(SOURCE, DEST, FARE) VALUES('DHAKA', 'RAJSHAHI', 100);


CREATE TABLE ROUTE_TRAIN_JUNCTION(
  ROUTE_ID INT,
  TID INT,
  ARRIVAL_TIME VARCHAR2(20),
  DEPARTURE_TIME VARCHAR2(20),
  CONSTRAINT R_FK FOREIGN KEY (ROUTE_ID) REFERENCES ROUTES(ROUTE_ID),
  CONSTRAINT T_FK FOREIGN KEY (TID) REFERENCES TRAINS(TID)
);

INSERT INTO ROUTE_TRAIN_JUNCTION(ROUTE_ID, TID, ARRIVAL_TIME, DEPARTURE_TIME) VALUES(2, 1002, '10.00 AM', '7.00 AM');

CREATE TABLE TICKETS(
  TICKET_ID INT,
  TRAIN_ID INT,
  USER_ID INT,
  ROUTE_ID,
  TRAVEL_DATE DATE,
  ARRIVAL_TIME VARCHAR2(20),
  DEPARTURE_TIME VARCHAR2(20),
  TRAIN_NAME VARCHAR2(20),
  BID INT NOT NULL,
  B_NAME VARCHAR2(20),
  SID INT NOT NULL,
  SEAT_NUM INT,
  CLASS VARCHAR2(20),
  FARE NUMBER(3,0),
  CONSTRAINT TICKET_PK PRIMARY KEY(TICKET_ID),
  CONSTRAINT TRAIN_FK  FOREIGN KEY (TRAIN_ID) REFERENCES TRAINS(TID),
  CONSTRAINT USER_FK FOREIGN KEY (USER_ID)  REFERENCES USERS(ID),
  CONSTRAINT ROUTE_FK FOREIGN KEY (ROUTE_ID)  REFERENCES ROUTES(ROUTE_ID),
  CONSTRAINT BLOCK_FK FOREIGN KEY (BID) REFERENCES BLOCKS(BID),
   CONSTRAINT SEAT_FK FOREIGN KEY (SID) REFERENCES SEATS(SID)
);

CREATE OR REPLACE FUNCTION GEN_TICKET_ID(TRAIN_ID INT, ROUTE_ID INT)
RETURN VARCHAR2
IS
TICKET_ID VARCHAR2(20) := '';
BEGIN
TICKET_ID := CONCAT(to_number(to_char(systimestamp,'rrmmddiss')),CONCAT(TRAIN_ID, ROUTE_ID));
RETURN TICKET_ID;
DBMS_OUTPUT.PUT_LINE(TICKET_ID);
END;
/

CREATE OR REPLACE TRIGGER TICKET_ID
BEFORE INSERT ON TICKETS
FOR EACH ROW

BEGIN
  SELECT GEN_TICKET_ID(:new.TRAIN_ID, :new.ROUTE_ID)
  INTO   :new.TICKET_ID
  FROM   dual;
END;
/

INSERT INTO TICKETS(TRAIN_ID, USER_ID, ROUTE_ID, TRAVEL_DATE, ARRIVAL_TIME, DEPARTURE_TIME, TRAIN_NAME, BID, B_NAME, SID, SEAT_NUM, CLASS, FARE)
VALUES(1002, 1, 2, TO_DATE('12 AUG 2022', 'DD MON YYYY'), '8.00 AM', '6.00 AM', 'SILK_CITY',1 , 'A',22 , 20, 'SHOVAN', 200 );


SELECT * FROM (SELECT SID, SEAT_NUM, BID FROM SEATS WHERE CLASS = 'SHOVAN' AND SID NOT IN 
(SELECT SID FROM TICKETS WHERE TRAIN_ID = 1002 AND TRAVEL_DATE = TO_DATE('2022-08-12', 'YYYY-MM-DD')
 AND CLASS = 'SHOVAN') ORDER BY SEAT_NUM ) WHERE ROWNUM =1;